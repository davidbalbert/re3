#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 're3/scanner'

module Re3
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 38)

  def parse(s)
    @scanner = Scanner.new(s)
    do_parse
  end

  def next_token
    @scanner.next_token
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     7,     7,     9,     7,     7,     6,     6,    17,     6,     6,
     7,    11,    12,    13,     9,     6,    15,     8 ]

racc_action_check = [
     0,    16,    14,     3,     9,     0,    16,    14,     3,     9,
     6,     5,     5,     5,     2,     6,     8,     1 ]

racc_action_pointer = [
    -2,    17,    11,     1,   nil,     7,     8,   nil,    16,     2,
   nil,   nil,   nil,   nil,    -1,   nil,    -1,   nil ]

racc_action_default = [
   -12,   -12,    -1,    -3,    -5,    -9,   -12,   -11,   -12,   -12,
    -4,    -6,    -7,    -8,   -12,    18,    -2,   -10 ]

racc_goto_table = [
    10,     2,    16,     1,   nil,   nil,   nil,    14,   nil,   nil,
   nil,   nil,   nil,    10 ]

racc_goto_check = [
     4,     2,     3,     1,   nil,   nil,   nil,     2,   nil,   nil,
   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,     3,     1,    -7,    -3,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 10, :_reduce_1,
  3, 11, :_reduce_2,
  1, 11, :_reduce_3,
  2, 12, :_reduce_4,
  1, 12, :_reduce_5,
  2, 13, :_reduce_6,
  2, 13, :_reduce_7,
  2, 13, :_reduce_8,
  1, 13, :_reduce_9,
  3, 14, :_reduce_10,
  1, 14, :_reduce_11 ]

racc_reduce_n = 12

racc_shift_n = 18

racc_token_table = {
  false => 0,
  :error => 1,
  :CHAR => 2,
  "|" => 3,
  "*" => 4,
  "+" => 5,
  "?" => 6,
  "(" => 7,
  ")" => 8 }

racc_nt_base = 9

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "CHAR",
  "\"|\"",
  "\"*\"",
  "\"+\"",
  "\"?\"",
  "\"(\"",
  "\")\"",
  "$start",
  "target",
  "or_exps",
  "exps",
  "exp_with_modifier",
  "paren_exp" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 6)
  def _reduce_1(val, _values, result)
     val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 10)
  def _reduce_2(val, _values, result)
     result = [:or, val.first, val.last ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_3(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_4(val, _values, result)
     result = [:and, val.first, val.last] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_5(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_6(val, _values, result)
     result = [:any, val.first] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_7(val, _values, result)
     result = [:one_plus, val.first] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_8(val, _values, result)
     result = [:maybe, val.first] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_9(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_10(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_11(val, _values, result)
     result = val.first 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Re3
